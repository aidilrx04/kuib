// Generated by https://quicktype.io

export interface Game {
    createdAt: CreatedAt;
    creator: string;
    code?: string;
    result: Result[];
    status?: string;
    id: string;
    type?: string;
    kid: string;
    kuibData?: Kuib;
    ref?: Ref;
}

export interface CreatedAt {
    _seconds: number;
    _nanoseconds: number;
}

export interface Kuib {
    id: string;
    creator: string;
    questions: Question[];
    title: string;
}

export interface Question {
    correctAnswerId: string;
    text: string;
    answers: Answer[];
    id: string;
}

export interface Answer {
    text: string;
    id: string;
}

export interface Ref {
    _firestore: Firestore;
    _path: Path;
    _converter: Converter;
}

export interface Converter {
}

export interface Firestore {
    projectId: string;
}

export interface Path {
    segments: string[];
}

export interface Result {
    scores: Score[];
    accScores: number;
    id: string;
}

export interface Score {
    accScores: number;
    aid: string;
    qid: string;
}

export type KuibWCreatorData = (Kuib & { creatorData: User })

export interface User {
    id: string;
    username: string;
    email: string;
    uid: string;
}


export interface Player {
    accScores: number;
    currentQuestion: number;
    scores: any[];
}

export interface GameData {
    data: Game;
    users: User[];
    player: Player;
    user: User;
    kuib: Kuib;
}
